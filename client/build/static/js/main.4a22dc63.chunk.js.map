{"version":3,"sources":["images/Google-Books-Background.jpg","components/SearchForm/SearchForm.js","utils/API.js","components/BookResult.js","components/ResultsContainer.js","pages/Search.js","pages/Saved.js","components/Nav/Nav.js","components/Header/Header.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchForm","props","id","className","htmlFor","form","type","name","onChange","e","handleChange","placeholder","required","onClick","handleSearchClick","axios","get","title","post","bookData","delete","BookResult","handleSaveClick","this","setState","saved","authors","link","img","description","preventDefault","API","then","response","console","log","catch","err","state","deleted","bind","handleDeleteClick","Router","dispatch","location","style","display","join","href","target","rel","path","disabled","src","smallThumbnail","thumbnail","alt","React","Component","ResultsContainer","map","book","bookInfo","volumeInfo","canonicalVolumeLink","imageLinks","key","_id","savedBooks","length","Search","bookInput","value","data","match","Saved","Nav","to","headerStyle","backgroundImage","Header","Footer","App","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4a22dc63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Google-Books-Background.683d5220.jpg\";","import React from \"react\";\nimport './style.css'\n\nfunction SearchForm(props) {\n    return(\n        <div id=\"searchContainer\">\n            <div className=\"col col-md-4\"></div>\n            <div className=\"col col-md-4\">\n                  <h3>Book Search</h3>\n            <form id=\"bookSearch\">\n                <label htmlFor=\"bookInput\" form=\"bookSearch\">Enter a book to search:</label>\n                <br></br>\n                <input type=\"text\" name=\"bookInput\" id=\"bookInput\" form=\"bookSearch\" onChange={(e) => props.handleChange(e)} placeholder=\"Book Title\" required/>\n                <br></br>\n                <button type=\"submit\" onClick={(e) => props.handleSearchClick(e)}>Search</button>\n            </form>\n            </div>\n          \n        </div>\n    );\n}\n\nexport default SearchForm;","import axios from \"axios\";\n\nexport default {\n    getBooks: () => {\n        return axios.get(\"http://localhost:3001/api/books\");\n    },\n    searchBooks: (title) => {\n    \n        return axios.post(\"http://localhost:3001/search\", {title: title});\n    },\n    addBookToDB: (bookData) => {\n        return axios.post(\"http://localhost:3001/api/books\", bookData);\n    },\n    deleteBook: (id) => {\n        return axios.delete(`http://localhost:3001/api/books/${id}`);\n    }\n}","import React from \"react\";\nimport API from \"../utils/API\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nclass BookResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            saved: false,\n            deleted: false\n        }\n        this.handleSaveClick = this.handleSaveClick.bind(this);\n        this.handleDeleteClick = this.handleDeleteClick.bind(this);\n    }\n\n    handleSaveClick = function(e) {\n        this.setState({saved: true});\n        const bookData = {\n            title: this.props.title,\n            authors: this.props.authors,\n            link: this.props.link,\n            img: this.props.img,\n            description: this.props.description\n        }\n        e.preventDefault();\n        API.addBookToDB(bookData).then(\n            (response) => {\n                console.log(response);\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    handleDeleteClick(e) {\n        this.setState({deleted: true});\n        e.preventDefault();\n        API.deleteBook(this.props.id).then(\n            (response) => {\n                console.log(response);\n                Router.dispatch(this.props.location, null)\n            }\n        ).catch(\n            (err) => {\n                console.log(err);\n            }\n        );\n    }\n\n    render() {\n        return(\n            <div className=\"bookResult\" id={(this.props.id)? this.props.id: null} style={{display: this.state.deleted? \"none\" : \"block\"}}>\n                <div className=\"row\">\n                    <div className=\"aboutBook\">\n                        <h4>{this.props.title}</h4>\n                        <p>By: {(this.props.authors)? this.props.authors.join(\", \"): \"N/A\"}</p>\n                    </div>\n                    <div className=\"btnDiv\">\n                        {\n                            // if link to book exists include View button else do not\n                            (this.props.link)? <a href={this.props.link} target=\"_blank\" rel=\"noopener noreferrer\"><button type=\"button\" name=\"view\">View</button></a> : null\n                        }\n                        {\n                            // if this.props.path is \"/\" display save button else display Delete button\n                            (this.props.path === \"/\")? <button type=\"button\" name=\"save\" onClick={this.handleSaveClick} disabled={this.state.saved}>{(this.state.saved)? \"Saved\" : \"Save\"}</button> : <button type=\"button\" name=\"Delete\" onClick={this.handleDeleteClick} disabled={this.state.deleted}>Delete</button>\n                        }\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {(this.props.img)? <img src= {\n                        // if smallthubmail exists on this.props.img use that else if thumbnail exists on this.props.img use that else leave src empty\n                        (this.props.img.smallThumbnail)? this.props.img.smallThumbnail:\n                        (this.props.img.thumbnail)? this.props.img.thumbnail: \"\"\n                    } alt=\"book cover\"/>: null}\n                    <p>{(this.props.description)? this.props.description: \"N/A\"}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default BookResult;","import React from \"react\";\nimport BookResult from \"../components/BookResult\";\n\nfunction ResultsContainer(props) {\n    if(props.path === \"/\") {\n        return(\n            <div id=\"resultsContainer\">\n                <h3>Results Found</h3>\n                {props.bookData.map((book) => {\n                    const bookInfo = book.volumeInfo;\n                    return <BookResult\n                    title={bookInfo.title}\n                    authors={bookInfo.authors}\n                    description={bookInfo.description}\n                    link={bookInfo.canonicalVolumeLink}\n                    img={bookInfo.imageLinks}\n                    path={props.path}\n                    key={book._id}/>\n                })}\n            </div>\n        );\n    } else if(props.path === \"/saved\") {\n        if(props.savedBooks.length > 0) {\n            return(\n                <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    {props.savedBooks.map((book) => {\n                        return <BookResult\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        img={book.img}\n                        id={book._id}\n                        path={props.path}\n                        key={book._id}/>\n                    })}\n                </div>\n            );\n        } else {\n            return(\n                 <div id=\"resultsContainer\">\n                    <h3>Saved Books</h3>\n                    <p>No saved books.</p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default ResultsContainer; ","import React from \"react\";\nimport SearchForm from \"../components/SearchForm/SearchForm.js\";\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport API from \"../utils/API\";\nimport \"./style.css\"\n\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bookInput: \"\",\n            bookData: []\n        }\n        this.handleSearchClick = this.handleSearchClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault();\n        this.setState({bookInput: e.target.value})\n    }\n\n    handleSearchClick(e) {\n        e.preventDefault();\n        API.searchBooks(this.state.bookInput)\n            .then(\n                (response) => {\n                    \n                    this.setState({bookData: response.data});\n                    this.setState({bookInput: \"\"});\n                }\n            );\n    }\n\n    render() {\n    \n        return(\n            <div className=\"container\">\n                <main>\n             \n\n                <SearchForm handleChange={this.handleChange} handleSearchClick={this.handleSearchClick} className='search-form'/>\n                {(this.state.bookData.length > 0)?\n                    <ResultsContainer className=\"books-container\" bookData={this.state.bookData} path={this.props.match.path}/> : null\n                }\n            </main>\n            </div>\n            \n        );\n    }\n}\n\nexport default Search;","import React from \"react\";\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport API from \"../utils/API\";\n\nclass Saved extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedBooks: [],\n    };\n  }\n\n  componentWillMount() {\n    API.getBooks()\n      .then((response) => {\n          console.log('oly the books we saved!! from db!!', response)\n        this.setState({ savedBooks: response.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    console.log(this.state.savedBooks);\n    return (\n        <div className=\"container\">\n              <main>\n        <ResultsContainer\n          savedBooks={this.state.savedBooks}\n          path={this.props.match.path}\n        />\n      </main>\n        </div>\n    \n    );\n  }\n}\n\nexport default Saved;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar\">\n      <div>\n        <h2>Google Books</h2>\n        <Link to=\"/\" className=\"link\">\n          Search\n        </Link>\n        <Link to=\"/saved\" className=\"link\">\n          Saved\n        </Link>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport backgroundImage from \"../../images/Google-Books-Background.jpg\";\nimport \"./style.css\"\n\n\nconst headerStyle = {\n  \"backgroundImage\": `url(${backgroundImage})`,\n  \"maxWidth\": \"100vw\",\n  \"height\": \"calc(100vw * .43333)\",\n  \"backgroundSize\": \"cover\",\n  \"position\": \"relative\"\n}\n\nfunction Header() {\n    return (\n        <header style={headerStyle}>\n          <span className=\"span\">\n              <h1> Google Books React Search</h1>\n            <p>Search for and Save Books of Interest</p>\n          </span>\n\n        </header>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <h5>Google Books</h5>\n\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav/Nav\";\nimport Header from \"./components/Header/Header.js\";\nimport Footer from \"./components/Footer/Footer.js\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={Search}/>\n            <Route path=\"/saved\" component={Saved}/>\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; import\n'bootstrap-css-only/css/bootstrap.min.css'; import\n'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}